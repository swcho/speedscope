{
  "exporter": "speedscope@0.6.0",
  "$schema": "https://www.speedscope.app/file-format-schema.json",
  "name": "Pinpoint",
  "activeProfileIndex": 0,
  "profiles": [
    {
      "type": "sampled",
      "name": "pinpoint",
      "unit": "milliseconds",
      "startValue": 1604036295889,
      "endValue": 1604036296716,
      "samples": [
        [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          7,
          8
        ],
        [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11
        ],
        [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17
        ],
        [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11
        ],
        [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8
        ],
        [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          20,
          11,
          8
        ],
        [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          20,
          10,
          11
        ],
        [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8
        ],
        [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          10,
          11
        ],
        [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11
        ],
        [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8
        ],
        [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          10,
          11
        ],
        [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8
        ],
        [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          10,
          11
        ],
        [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8
        ],
        [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          10,
          11
        ],
        [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8
        ],
        [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18
        ],
        [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8
        ],
        [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          20,
          11,
          8
        ],
        [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          20,
          10,
          11
        ],
        [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14
        ],
        [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          16,
          17,
          18
        ],
        [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8
        ],
        [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          20,
          11,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18
        ],
        [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8
        ],
        [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          20,
          11,
          19
        ],
        [
          0,
          1,
          2,
          3,
          22,
          6
        ],
        [
          0,
          1,
          2,
          3,
          24,
          25,
          26,
          26
        ],
        [
          0,
          1,
          2,
          3,
          24,
          25,
          26,
          26,
          26,
          26,
          26
        ],
        [
          0,
          1,
          2,
          3,
          24,
          25,
          26,
          26,
          26,
          26
        ],
        [
          0,
          1,
          2,
          3,
          24,
          25,
          26,
          26,
          26,
          26,
          26,
          26,
          26,
          26
        ],
        [
          0,
          1,
          2,
          3,
          24,
          25,
          26,
          26,
          26
        ],
        [
          0,
          1,
          2,
          3,
          24,
          25,
          26,
          26,
          26,
          23,
          24,
          25,
          26,
          26,
          26,
          26,
          26,
          26
        ]
      ],
      "weights": [
        7,
        58,
        1,
        42,
        24,
        1,
        26,
        1,
        28,
        26,
        1,
        28,
        1,
        25,
        1,
        22,
        1,
        41,
        23,
        1,
        24,
        1,
        35,
        20,
        12,
        7,
        362,
        1,
        1,
        1,
        1,
        1,
        1,
        1
      ]
    }
  ],
  "shared": {
    "frames": [
      {
        "name": "Servlet Process"
      },
      {
        "name": "invoke(Request request, Response response)"
      },
      {
        "name": "doGet(HttpServletRequest request, HttpServletResponse response)"
      },
      {
        "name": "newSections(String locale, String occ, Integer displayWidth, String userAgent)"
      },
      {
        "name": "findNewStampSections(UserAgent userAgent, String occ)"
      },
      {
        "name": "findNewStampSectionsWithFilter(UserAgent agent, String occ)"
      },
      {
        "name": "findAll()"
      },
      {
        "name": "findByCategoryType(CategoryType categoryType)"
      },
      {
        "name": "asyncGet(String key)"
      },
      {
        "name": "Asynchronous Invocation"
      },
      {
        "name": "set(Future d)"
      },
      {
        "name": "get(long duration, TimeUnit units)"
      },
      {
        "name": "selectStampsBySectionIds(List sectionIds, String cacheKey)"
      },
      {
        "name": "selectStampsBySectionIds(List sectionIds)"
      },
      {
        "name": "queryForMap(String statementName, Object parameterObject, String keyProperty, String valueProperty)"
      },
      {
        "name": "getConnection()"
      },
      {
        "name": "executeQuery(String sql)"
      },
      {
        "name": "prepareStatement(String sql)"
      },
      {
        "name": "execute()"
      },
      {
        "name": "set(String key, int exp, Object o)"
      },
      {
        "name": "set(Object o)"
      },
      {
        "name": "findNewFrameSections(UserAgent userAgent, String occ)"
      },
      {
        "name": "findNewFrameSectionsWithFilter(UserAgent agent, String extraCountry)"
      },
      {
        "name": "findNewCategories(UserAgent userAgent, String occ)"
      },
      {
        "name": "findNewCategoriesWithFilter(UserAgent userAgent, String occ)"
      },
      {
        "name": "findAllWithFilter(UserAgent userAgent, String occ)"
      },
      {
        "name": "findDetailSectionsWithFilter(Long categoryId, long cursor, int fetchSize, UserAgent userAgent, String occ)"
      }
    ]
  }
}